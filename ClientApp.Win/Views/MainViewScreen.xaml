<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:Streamster.ClientCore.Models;assembly=Streamster.ClientCore"
                    xmlns:support="clr-namespace:Streamster.ClientApp.Win.Support" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml"/>
        <ResourceDictionary Source="OnScreenStyles.xaml"/>
        <ResourceDictionary Source="MainViewFilters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="OnScreenMessage" DataType="{x:Type models:TransientMessageModel}">
        <Border x:Name="root" Background="#95000000" BorderThickness="0">
            <DockPanel>
                <Button Margin="3" DockPanel.Dock="Right" Style="{StaticResource MaterialDesignIconForegroundButton}" ToolTip="Close message"
                                Command="{Binding Close, Converter={StaticResource CommandConverter}}">
                    <materialDesign:PackIcon Kind="Close" />
                </Button>
                <Grid DockPanel.Dock="Left" Margin="10,0,0,0" Width="24" Height="24">
                    <materialDesign:PackIcon x:Name="alert" VerticalAlignment="Center" Kind="AlertCircleOutline" 
                                             Foreground="#FF7777" Visibility="Collapsed"/>
                    <ProgressBar x:Name="progress" VerticalAlignment="Center" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True" Visibility="Collapsed" />
                </Grid>
                <TextBlock Margin="10,0" Foreground="White" VerticalAlignment="Center" Text="{Binding Message.Value}"/>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type.Value}" Value="Error">
                <Setter TargetName="alert" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type.Value}" Value="None">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type.Value}" Value="Progress">
                <Setter TargetName="progress" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="VideoInputPreview" DataType="{x:Type models:LocalVideoInputModel}">
        <Border x:Name="root" Margin="315,30,30,50" BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" VerticalAlignment="Bottom">
            <Grid MaxWidth="424" >
                <Viewbox>
                    <Border Background="#202020" Width="424" Height="239"/>
                </Viewbox>

                <TextBlock x:Name="noPreview" Margin="10,5" Foreground="White" Text="Preview not supported" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"/>

                <Image x:Name="preview" Source="{Binding Preview.Value, Converter={StaticResource ImageConverter}}" VerticalAlignment="Center" Stretch="Uniform" RenderTransformOrigin="0.5,0.5">
                    <Image.RenderTransform>
                        <ScaleTransform ScaleY="-1"/>
                    </Image.RenderTransform>
                </Image>

                <Border x:Name="previewText" HorizontalAlignment="Center" CornerRadius="0,0,5,5" VerticalAlignment="Top" Background="#90000000" Margin="0">
                    <TextBlock FontWeight="Normal" Margin="6,2" Foreground="White" Text="Preview"/>
                </Border>

                <Border x:Name="stateBorder" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#202020" Margin="15" Visibility="Visible" CornerRadius="3">
                    <TextBlock x:Name="stateText" Margin="10,0" Foreground="White" Text="" TextWrapping="Wrap"/>
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Preview.Value}" Value="{x:Null}">
                <Setter TargetName="preview" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="previewText" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Unknown">
                <Setter TargetName="stateText" Property="Text" Value="Updating state..."/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Running">
                <Setter TargetName="stateText" Property="Text" Value="The video source is running"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="RemoteDeviceOffline">
                <Setter TargetName="stateText" Property="Text" Value="Owning computer/device is offline"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State.Value}" Value="RemoteDeviceInactive">
                <Setter TargetName="stateText" Property="Text" Value="Owning computer/device is inactive"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Ready">
                <Setter TargetName="stateBorder" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="noPreview" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="InUseByOtherApp">
                <Setter TargetName="stateText" Property="Text" Value="In use by another application"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Removed">
                <Setter TargetName="stateText" Property="Text" Value="The device was unplugged"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Failed">
                <Setter TargetName="stateText" Property="Text" Value="Failed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="ObsIsNotStarted">
                <Setter TargetName="stateText" Property="Text" Value="OBS virtual camera is turned off"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="VideoInputInPopup" DataType="{x:Type models:LocalVideoInputModel}">
        <Border x:Name="root" Background="Transparent" 
                support:Behaviors.MouseOverListen="true"
                support:Behaviors.MouseOver="{Binding IsPreviewing.Value, Mode=TwoWay}">
            <Button x:Name="button" Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" HorizontalContentAlignment="Stretch"
                    Command="{Binding Select, Converter={StaticResource CommandConverter}}">
                <DockPanel>
                    <materialDesign:PackIcon Margin="3,0,0,0" DockPanel.Dock="Left" x:Name="type" Kind="Webcam" Height="24" Width="24"/>

                    <Border Margin="5,0" DockPanel.Dock="Right" x:Name="state" Height="20" Width="20">
                        <Grid>
                            <Border x:Name="stateIcon" CornerRadius="20" Background="Red"/>
                            <materialDesign:PackIcon Margin="-2" x:Name="running" Kind="PlayCircle" Visibility="Collapsed" Width="24" Height="24" Foreground="#1070D0"/>
                            <ProgressBar x:Name="unknown" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True" Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <TextBlock Width="55" x:Name="stateText" FontSize="12" VerticalAlignment="Center" TextAlignment="Right" DockPanel.Dock="Right"/>
                    <TextBlock VerticalAlignment="Center" Margin="5,0,8,0" Text="{Binding Source.Name}"/>
                </DockPanel>
            </Button>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding State.Value}" Value="RemoteDeviceInactive">
                <Setter TargetName="root" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding State.Value}" Value="Unknown">
                <Setter TargetName="unknown" Property="Visibility" Value="Visible"/>
                <Setter TargetName="stateIcon" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Running">
                <Setter TargetName="running" Property="Visibility" Value="Visible"/>
                <Setter TargetName="stateIcon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="stateText" Property="Text" Value="Running"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="RemoteDeviceOffline">
                <Setter TargetName="stateText" Property="Text" Value="Offline"/>
                <Setter TargetName="stateIcon" Property="Background" Value="Orange"/>
                <Setter TargetName="button" Property="Background" Value="{StaticResource OnScreenBackgroundDisabled}"/>
                <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource OnScreenBorderDisabled}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Ready">
                <Setter TargetName="stateIcon" Property="Background" Value="Green"/>
                <Setter TargetName="stateText" Property="Text" Value="Ready"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="InUseByOtherApp">
                <Setter TargetName="button" Property="Background" Value="{StaticResource OnScreenBackgroundDisabled}"/>
                <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource OnScreenBorderDisabled}"/>
                <Setter TargetName="stateText" Property="Text" Value="In use"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Removed">
                <Setter TargetName="stateText" Property="Text" Value="Removed"/>
                <Setter TargetName="stateIcon" Property="Background" Value="DarkGray"/>
                <Setter TargetName="button" Property="Background" Value="{StaticResource OnScreenBackgroundDisabled}"/>
                <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource OnScreenBorderDisabled}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="Failed">
                <Setter TargetName="stateText" Property="Text" Value="Failed"/>
                <Setter TargetName="button" Property="Background" Value="{StaticResource OnScreenBackgroundDisabled}"/>
                <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource OnScreenBorderDisabled}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding State.Value}" Value="ObsIsNotStarted">
                <Setter TargetName="stateText" Property="Text" Value="Off"/>
                <Setter TargetName="button" Property="Background" Value="{StaticResource OnScreenBackgroundDisabled}"/>
                <Setter TargetName="button" Property="BorderBrush" Value="{StaticResource OnScreenBorderDisabled}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}" Value="Virtual">
                <Setter TargetName="type" Property="Kind" Value="AlphaVCircleOutline"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}" Value="Remote">
                <Setter TargetName="type" Property="Kind" Value="ContactlessPaymentCircle"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="VideoInputModelInPopup">
        <ContentPresenter Content="{Binding Local}" ContentTemplate="{StaticResource VideoInputInPopup}"/>
    </DataTemplate>
    
    <DataTemplate x:Key="MainViewScreen" DataType="{x:Type models:MainStreamerModel}">
        <Border x:Name="root" Background="#111111">
            <Grid>
                <Image x:Name="Preview" Source="{Binding ScreenRenderer.ScreenRenderer.Screen.Value}" Stretch="Uniform" RenderOptions.BitmapScalingMode="LowQuality"  />

                <Border x:Name="PreviewIsOff" Visibility="Collapsed" Background="#090909">
                    <Grid >
                        <TextBlock Margin="0,0,0,15" Text="Video preview is turned off" Foreground="#303030" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <ToggleButton x:Name="showHidePreview2" Margin="10,10" Style="{StaticResource OnScreenActionToggleButton}"
                                          ToolTip="Show preview"
                                      HorizontalAlignment="Center" VerticalAlignment="Bottom" Opacity="0.7"
                                          IsChecked="{Binding CoreData.ThisDevice.DisplayVideoHidden}">
                            <materialDesign:PackIcon Kind="EyeOff" Height="24" Width="24"/>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon Kind="ShapeRectanglePlus" Height="24" Width="24"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                    </Grid>
                    
                </Border>

                <ContentControl Focusable="False" Content="{Binding VideoSource.Message}" ContentTemplate="{StaticResource OnScreenMessage}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,40,10,40"/>
                
                <ContentControl x:Name="preview" Focusable="False" Content="{Binding VideoSource.CurrentPreview.Value}" ContentTemplate="{StaticResource VideoInputPreview}"/>

                <materialDesign:Transitioner x:Name="controls" SelectedIndex="0" VerticalAlignment="Bottom">
                    <materialDesign:TransitionerSlide>  
                        <DockPanel Margin="5,0" VerticalAlignment="Bottom">

                            <Button x:Name="filters" Margin="5" DockPanel.Dock="Right" Style="{StaticResource OnScreenOutlinedButton}" ToolTip="Filters"
                                    Command="{x:Static materialDesign:Transitioner.MoveNextCommand}">
                                <materialDesign:PackIcon Kind="AutoFix" Height="24" Width="24" />
                            </Button>
                            
                            <ToggleButton x:Name="flipH" Margin="5" DockPanel.Dock="Right" Style="{StaticResource OnScreenActionToggleButton}"
                                          ToolTip="Flip horizontally"
                                          IsChecked="{Binding Filters.FlipH.Value}">
                                <materialDesign:PackIcon Kind="ReflectHorizontal" Height="24" Width="24"/>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="ReflectHorizontal" Height="24" Width="24" RenderTransformOrigin="0.5, 0.5"
                                                             Foreground="{StaticResource OnScreenHighlightedForeground}">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <ScaleTransform ScaleX="-1" />
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>

                            <ToggleButton x:Name="showHidePreview" Margin="5" DockPanel.Dock="Right" Style="{StaticResource OnScreenActionToggleButton}"
                                          ToolTip="Hide preview. This can prevent overloading of CPU and Encoder"
                                          IsChecked="{Binding CoreData.ThisDevice.DisplayVideoHidden}">
                                <materialDesign:PackIcon Kind="TelevisionOff" Height="24" Width="24"/>
                                <materialDesign:ToggleButtonAssist.OnContent>
                                    <materialDesign:PackIcon Kind="Eye" Height="24" Width="24"/>
                                </materialDesign:ToggleButtonAssist.OnContent>
                            </ToggleButton>

                            <DockPanel HorizontalAlignment="Left">

                                <materialDesign:PopupBox DockPanel.Dock="Right" x:Name="fps" Style="{StaticResource OnScreenPopupBox}" ToolTip="Frames per second"
                                                         Width="60"
                                                         Margin="5">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <TextBlock FontWeight="Medium" Text="{Binding CoreData.Settings.Fps}" />
                                    </materialDesign:PopupBox.ToggleContent>
                                    <Grid Margin="0,5">
                                        <ItemsControl x:Name="fpsList" ItemsSource="{Binding FpsList}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" Content="{Binding}" MinWidth="60"
                                                        Command="{Binding DataContext.SelectFps, RelativeSource={RelativeSource AncestorType=ItemsControl},Converter={StaticResource CommandConverter}}"
                                                        CommandParameter="{Binding}"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <Border MaxWidth="190" x:Name="fpsNoChange" Background="{StaticResource OnScreenBackgroundMouseOver}" BorderBrush="{StaticResource OnScreenBorderMouseOver}" BorderThickness="1"
                                                Visibility="Collapsed"
                                                CornerRadius="3">
                                            <TextBlock Margin="10,5" Foreground="{StaticResource OnScreenForegroundMouseOver}"
                                                       TextWrapping="Wrap"
                                                       Text="FPS cannot be changed during restreaming or recording"/>
                                        </Border>
                                    </Grid>
                                </materialDesign:PopupBox>
                                
                                <materialDesign:PopupBox DockPanel.Dock="Right" x:Name="resolution" Style="{StaticResource OnScreenPopupBox}" ToolTip="Resolution"
                                                         Width="120"
                                                         Margin="5">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <TextBlock FontWeight="Medium" Text="{Binding CoreData.Settings.Resolution}" />
                                    </materialDesign:PopupBox.ToggleContent>
                                    <Grid Margin="0,5" >
                                        <ItemsControl x:Name="resolutionList" ItemsSource="{Binding Resolutions}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Button Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" Content="{Binding}" Width="120"
                                                        Command="{Binding DataContext.SelectResolution, RelativeSource={RelativeSource AncestorType=ItemsControl},Converter={StaticResource CommandConverter}}"
                                                        CommandParameter="{Binding}"/>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <Border MaxWidth="190" x:Name="resolutionNoChange" Background="{StaticResource OnScreenBackgroundMouseOver}" BorderBrush="{StaticResource OnScreenBorderMouseOver}" BorderThickness="1"
                                                Visibility="Collapsed"
                                                CornerRadius="3">
                                            <TextBlock Margin="10,5" Foreground="{StaticResource OnScreenForegroundMouseOver}"
                                                       TextWrapping="Wrap"
                                                       Text="Resolution cannot be changed during restreaming or recording"/>
                                        </Border>
                                    </Grid>
                                </materialDesign:PopupBox>

                                <materialDesign:PopupBox x:Name="cameras"
                                                         Style="{StaticResource OnScreenPopupBox}"
                                                         IsPopupOpen="{Binding CoreData.ThisDevice.PreviewVideo, Mode=TwoWay}"
                                                         PlacementMode="TopAndAlignLeftEdges"
                                                         HorizontalAlignment="Stretch"
                                                         HorizontalContentAlignment="Stretch"
                                                         ToolTip="Video source"
                                                         Margin="5">
                                    <materialDesign:PopupBox.ToggleContent>
                                        <Grid>
                                            <Border Width="260"/>
                                            <TextBlock FontWeight="Medium" Text="{Binding VideoSource.CurrentVideo.Value}"/>
                                        </Grid>
                                    </materialDesign:PopupBox.ToggleContent>
                                    <Grid Margin="0,5">
                                        <ItemsControl x:Name="camerasList" ItemsSource="{Binding CoreData.Root.VideoInputs.Values}" ItemTemplate="{StaticResource VideoInputModelInPopup}">
                                        </ItemsControl>
                                        <Border x:Name="camerasEmpty"  MaxWidth="290" Background="{StaticResource OnScreenBackground}" BorderThickness="1" CornerRadius="3" BorderBrush="{StaticResource OnScreenBorder}"
                                                Visibility="Collapsed">
                                            <TextBlock Margin="20,10" Foreground="{StaticResource OnScreenForegroundPressed}" TextWrapping="Wrap" TextAlignment="Center" Text="No video sources (cameras) detected on this computer"/>
                                        </Border>
                                    </Grid>
                                </materialDesign:PopupBox>

                            </DockPanel>
                        </DockPanel>
                    </materialDesign:TransitionerSlide>
                    <materialDesign:TransitionerSlide TransitionOrigin="1, 1">
                        <ContentControl Content="{Binding Filters}"/>
                    </materialDesign:TransitionerSlide>
                </materialDesign:Transitioner>
            </Grid>
        </Border>

        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding ChangeStreamParamsDisabled.Value}" Value="True">
                <Setter TargetName="resolutionList" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="resolutionNoChange" Property="Visibility" Value="Visible"/>
                <Setter TargetName="fpsList" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="fpsNoChange" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenFilterHidden, ElementName=root}" Value="True">
                <Setter TargetName="flipH" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="filters" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenFpsHidden, ElementName=root}" Value="True">
                <Setter TargetName="fps" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenResolutionHidden, ElementName=root}" Value="True">
                <Setter TargetName="resolution" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>


            <DataTrigger Binding="{Binding CoreData.ThisDevice.DisplayVideoHidden}" Value="True">
                <Setter TargetName="Preview" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PreviewIsOff" Property="Visibility" Value="Visible"/>
                <Setter TargetName="controls" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            
            
            <DataTrigger Binding="{Binding CoreData.Root.VideoInputs.Values.Count}" Value="0">
                <Setter TargetName="camerasList" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="camerasEmpty" Property="Visibility" Value="Visible"/>
            </DataTrigger>


            <DataTrigger Binding="{Binding Filters.AnyFilterIsSet.Value}" Value="True">
                <Setter TargetName="filters" Property="Foreground" Value="{StaticResource OnScreenHighlightedForeground}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding Filters.FiltersEnabled.Value}" Value="False">
                <Setter TargetName="filters" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="flipH" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding VideoSource.CurrentPreview.Value}" Value="{x:Null}">
                <Setter TargetName="preview" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsMouseOver, ElementName=root}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="controls" Storyboard.TargetProperty="(support:Behaviors.IsActivated)">
                                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.3"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="controls" Storyboard.TargetProperty="(support:Behaviors.IsActivated)">
                                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:5"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:Behaviors.IsActivated), ElementName=controls}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="controls" Storyboard.TargetProperty="Opacity" 
                                             Duration="0:0:0.2" To="1.0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>

                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="controls" Storyboard.TargetProperty="Opacity" 
                                             Duration="0:0:0.2" To="0.0"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>