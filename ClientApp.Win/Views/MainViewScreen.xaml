<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:Streamster.ClientCore.Models;assembly=Streamster.ClientCore"
                    xmlns:support="clr-namespace:Streamster.ClientApp.Win.Support" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:controls="clr-namespace:Streamster.ClientApp.Win.Controls" xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Common.xaml"/>
        <ResourceDictionary Source="OnScreenStyles.xaml"/>
        <ResourceDictionary Source="MainViewFilters.xaml"/>
        <ResourceDictionary Source="EditingOnScreen.xaml"/>
        <ResourceDictionary Source="EditingView.Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    

    <DataTemplate x:Key="OnScreenMessage" DataType="{x:Type models:TransientMessageModel}">
        <Border x:Name="root" Background="#95000000" BorderThickness="0">
            <DockPanel>
                <Button Margin="3" DockPanel.Dock="Right" Style="{StaticResource MaterialDesignIconForegroundButton}" ToolTip="Close message"
                                Command="{Binding Close, Converter={StaticResource CommandConverter}}">
                    <materialDesign:PackIcon Kind="Close" />
                </Button>
                <Grid DockPanel.Dock="Left" Margin="10,0,0,0" Width="24" Height="24">
                    <materialDesign:PackIcon x:Name="alert" VerticalAlignment="Center" Kind="AlertCircleOutline" 
                                             Foreground="#FF7777" Visibility="Collapsed"/>
                    <ProgressBar x:Name="progress" VerticalAlignment="Center" Style="{StaticResource MaterialDesignCircularProgressBar}" Value="0" IsIndeterminate="True" Visibility="Collapsed" />
                </Grid>
                <TextBlock Margin="10,0" Foreground="White" VerticalAlignment="Center" Text="{Binding Message.Value}"/>
            </DockPanel>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Type.Value}" Value="Error">
                <Setter TargetName="alert" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type.Value}" Value="None">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type.Value}" Value="Progress">
                <Setter TargetName="progress" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <Style x:Key="OnScreenAddLayerButtonStyle" TargetType="Button" BasedOn="{StaticResource OnScreenPopupBoxButton}">
        <Setter Property="Margin" Value="0,0,5,5"/>
    </Style>
           

    <DataTemplate x:Key="OnScreenSceneItem" DataType="{x:Type models:SceneItemModel}">
        <Button x:Name="root" Width="260" Style="{StaticResource OnScreenAddLayerButtonStyle}"
                Command="{Binding Select, Converter={StaticResource CommandConverter}}"
                IsDefault="True"
                ToolTip="{Binding SourceIssue.Value}"
                ToolTipService.Placement="Right"
                ToolTipService.InitialShowDelay="0"
                HorizontalContentAlignment="Stretch">
            <Button.Resources>
                <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
                    <Setter Property="Background" Value="#aa0000"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="TextElement.FontSize" Value="14"/>
                    <Setter Property="Margin" Value="10,0"/>
                    <Setter Property="VerticalOffset" Value="-4"/>
                </Style>
            </Button.Resources>
            <DockPanel>
                <Button Margin="0" x:Name="showHidePreview2" DockPanel.Dock="Right" Style="{StaticResource MaterialDesignIconForegroundButton}"
                                      Width="30" Height="30" MinWidth="30"
                                        ToolTip="Remove layer"
                                        ToolTipService.Placement="Right"
                        Command="{Binding Delete, Converter={StaticResource CommandConverter}}">
                    <Button.Resources>
                        <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
                            <Setter Property="Background" Value="white"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="TextElement.FontSize" Value="14"/>
                            <Setter Property="Margin" Value="10,0"/>
                            <Setter Property="VerticalOffset" Value="-4"/>
                        </Style>
                    </Button.Resources>
                    <materialDesign:PackIcon Kind="TrashCanOutline" Height="24" Width="24" />
                </Button>
                <ToggleButton Margin="0" x:Name="showHidePreview" DockPanel.Dock="Right" Style="{StaticResource OnScreenHideShowToggleButton}"
                                      Width="30" Height="30" MinWidth="30"
                                        ToolTip="Show/hide level"
                                        ToolTipService.Placement="Right"
                                        IsChecked="{Binding Model.Visible}">
                    <ToggleButton.Resources>
                        <Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
                            <Setter Property="Background" Value="white"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="TextElement.FontSize" Value="14"/>
                            <Setter Property="Margin" Value="10,0"/>
                            <Setter Property="VerticalOffset" Value="-4"/>
                        </Style>
                    </ToggleButton.Resources>
                    <materialDesign:PackIcon Kind="EyeOff" Height="24" Width="24" Foreground="#772211"/>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <materialDesign:PackIcon Kind="EyeOutline" Height="24" Width="24" Foreground="Black"/>
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
                <DockPanel>
                    <materialDesign:PackIcon Margin="2,0,0,0" x:Name="icon" DockPanel.Dock="Left" Kind="CircleDouble" Width="24" Height="24" VerticalAlignment="Center"/>
                    <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Text="{Binding Name.Value}"/>
                </DockPanel>
            </DockPanel>
        </Button>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected.Value}" Value="true">
                <Setter TargetName="root" Property="Background" Value="{StaticResource OnScreenBackgroundPressed}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SourceIssue.Value}" Value="{x:Null}">
                <Setter TargetName="root" Property="IsDefault" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="WebPage">
                <Setter TargetName="icon" Property="Kind" Value="Web"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Image">
                <Setter TargetName="icon" Property="Kind" Value="Image"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="ScreenCapture">
                <Setter TargetName="icon" Property="Kind" Value="MonitorScreenshot"/>
                <Setter TargetName="icon" Property="Width" Value="20"/>
                <Setter TargetName="icon" Property="Margin" Value="5,0,0,0"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="WindowCapture">
                <Setter TargetName="icon" Property="Kind" Value="WindowMaximize"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type}" Value="Lovense">
                <Setter TargetName="icon" Property="Kind" Value="AlphaLCircleOutline"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    
    <DataTemplate x:Key="MainViewScreen" DataType="{x:Type models:MainModel}">
        <Border x:Name="root" Background="#000000">
            <controls:ActivatingControl x:Name="activating">
                <Grid>
                    <ContentControl x:Name="Preview" Content="{Binding}" ContentTemplate="{StaticResource EditingOnScreen}"/>
                    
                    <Border x:Name="PreviewIsOff" Visibility="Collapsed" Background="#090909">
                        <Grid >
                            <TextBlock Margin="0,0,0,5" Text="Video preview is turned off" Foreground="#303030" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Button x:Name="showHidePreview2" Margin="10,15" Style="{StaticResource OnScreenPopupBoxButton}"
                                      HorizontalAlignment="Center" VerticalAlignment="Bottom" Opacity="0.7"
                                    Command="{Binding StreamSettings.ShowPreview, Converter={StaticResource CommandConverter}}">
                                <StackPanel Orientation="Horizontal" Margin="10,0">
                                    <materialDesign:PackIcon Kind="Landscape" Height="24" Width="24"/>
                                    <TextBlock Margin="5,0,0,0" Text="Show preview" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Button>
                        </Grid>

                    </Border>

                    <!--<ContentControl Focusable="False" Content="{Binding VideoSource.Message}" ContentTemplate="{StaticResource OnScreenMessage}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,40,10,40"/>-->

                    <DockPanel x:Name="ctrl" VerticalAlignment="Bottom">

                        <StackPanel Margin="0,5,10,5" x:Name="props" Orientation="Horizontal" DockPanel.Dock="Right" VerticalAlignment="Bottom">
                            <materialDesign:PopupBox x:Name="resolution" Style="{StaticResource OnScreenPopupBox}" ToolTip="Resolution" Width="120" Margin="0,5,5,5">
                                <materialDesign:PopupBox.ToggleContent>
                                    <TextBlock FontWeight="Medium" Text="{Binding CoreData.Settings.Resolution}" />
                                </materialDesign:PopupBox.ToggleContent>
                                <Grid Margin="0,5" >
                                    <ItemsControl x:Name="resolutionList" ItemsSource="{Binding StreamSettings.Resolutions}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" Content="{Binding}" Width="120"
                                                Command="{Binding DataContext.StreamSettings.SelectResolution, RelativeSource={RelativeSource AncestorType=ItemsControl},Converter={StaticResource CommandConverter}}"
                                                CommandParameter="{Binding}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Border MaxWidth="190" x:Name="resolutionNoChange" Background="{StaticResource OnScreenBackgroundMouseOver}" BorderBrush="{StaticResource OnScreenBorderMouseOver}" BorderThickness="1"
                                        Visibility="Collapsed"
                                        CornerRadius="3">
                                        <TextBlock Margin="10,5" Foreground="{StaticResource OnScreenForegroundMouseOver}"
                                                TextWrapping="Wrap"
                                                Text="Resolution cannot be changed during restreaming or recording"/>
                                    </Border>
                                </Grid>
                            </materialDesign:PopupBox>

                            <materialDesign:PopupBox x:Name="fps" Style="{StaticResource OnScreenPopupBox}" 
                                                 ToolTip="Frames per second" Width="60" Margin="5">
                                <materialDesign:PopupBox.ToggleContent>
                                    <TextBlock FontWeight="Medium" Text="{Binding CoreData.Settings.Fps}" />
                                </materialDesign:PopupBox.ToggleContent>
                                <Grid Margin="0,5">
                                    <ItemsControl x:Name="fpsList" ItemsSource="{Binding StreamSettings.FpsList}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" Content="{Binding}" MinWidth="60"
                                                Command="{Binding DataContext.StreamSettings.SelectFps, RelativeSource={RelativeSource AncestorType=ItemsControl},Converter={StaticResource CommandConverter}}"
                                                CommandParameter="{Binding}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <Border MaxWidth="190" x:Name="fpsNoChange" Background="{StaticResource OnScreenBackgroundMouseOver}" BorderBrush="{StaticResource OnScreenBorderMouseOver}" BorderThickness="1"
                                        Visibility="Collapsed"
                                        CornerRadius="3">
                                        <TextBlock Margin="10,5" Foreground="{StaticResource OnScreenForegroundMouseOver}"
                                                TextWrapping="Wrap"
                                                Text="FPS cannot be changed during restreaming or recording"/>
                                    </Border>
                                </Grid>
                            </materialDesign:PopupBox>

                            <materialDesign:PopupBox x:Name="showHidePreview" Style="{StaticResource OnScreenPopupBox}" 
                                                 ToolTip="Application layout" Width="75" Margin="5" PlacementMode="TopAndAlignRightEdges">
                                <materialDesign:PopupBox.ToggleContent>
                                    <TextBlock FontWeight="Medium" Text="Layout" />
                                </materialDesign:PopupBox.ToggleContent>
                                <Grid Margin="0,5">
                                    <ItemsControl ItemsSource="{Binding StreamSettings.LayoutTypes}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Margin="0,3" Style="{StaticResource OnScreenPopupBoxButton}" Content="{Binding DisplayName}" MinWidth="140"
                                                Command="{Binding DataContext.StreamSettings.SelectLayout, RelativeSource={RelativeSource AncestorType=ItemsControl},Converter={StaticResource CommandConverter}}"
                                                CommandParameter="{Binding}"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </materialDesign:PopupBox>
                        </StackPanel>

                        <Border Margin="45,0,0,0" x:Name="editing" HorizontalAlignment="Left" support:Behaviors.DoubleValue="0.0">
                            <Border.RenderTransform>
                                <TranslateTransform X="0">
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                            <Binding Path="ActualHeight" ElementName="editing"/>
                                            <Binding Path="(support:Behaviors.DoubleValue)" ElementName="editing" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </Border.RenderTransform>
                            
                            <StackPanel Margin="10,5,5,5" Orientation="Vertical" >
                                <Button x:Name="addLayer" Command="{Binding SceneEditing.AddLayer, Converter={StaticResource CommandConverter}}" 
                                    Style="{StaticResource OnScreenAddLayerButtonStyle}" HorizontalAlignment="Center"
                                        Margin="0,0,0,10">
                                    <StackPanel Margin="10,0" Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="Plus"/>
                                        <TextBlock Margin="5,0" Text="Add layer"/>
                                    </StackPanel>
                                </Button>
                                <ItemsControl ItemsSource="{Binding SceneEditing.Items}" ItemTemplate="{StaticResource OnScreenSceneItem}"/>
                            </StackPanel>

                        </Border>
                        
                    </DockPanel>
                </Grid>
            </controls:ActivatingControl>
        </Border>

        <DataTemplate.Triggers>

            <DataTrigger Binding="{Binding SceneEditing.AddLayerSelected.Value}" Value="true">
                <Setter TargetName="addLayer" Property="Background" Value="{StaticResource OnScreenBackgroundPressed}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StreamSettings.ChangeStreamParamsDisabled.Value}" Value="True">
                <Setter TargetName="resolutionList" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="resolutionNoChange" Property="Visibility" Value="Visible"/>
                <Setter TargetName="fpsList" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="fpsNoChange" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenSourcesHidden, ElementName=root}" Value="True">
                <Setter TargetName="editing" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenFpsHidden, ElementName=root}" Value="True">
                <Setter TargetName="fps" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding (support:ResponsiveHost.Calculation).Values.ScreenResolutionHidden, ElementName=root}" Value="True">
                <Setter TargetName="resolution" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>


            <DataTrigger Binding="{Binding StreamSettings.SelectedLayout.Value}" Value="NoScreen">
                <Setter TargetName="Preview" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PreviewIsOff" Property="Visibility" Value="Visible"/>
                <Setter TargetName="ctrl" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding SceneEditing.EditingMode.Value}" Value="True">
                <Setter TargetName="props" Property="IsHitTestVisible" Value="False"/>
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="editing" Storyboard.TargetProperty="(support:Behaviors.DoubleValue)" Duration="0:0:0.2" To="1.0"/>
                            <DoubleAnimation Storyboard.TargetName="props" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="props" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1.0"/>
                            <DoubleAnimation Storyboard.TargetName="editing" Storyboard.TargetProperty="(support:Behaviors.DoubleValue)" Duration="0:0:0.2" To="0.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsActive, ElementName=activating}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard BeginTime="0:0:0.3">
                            <DoubleAnimation Storyboard.TargetName="ctrl" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="1.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>

                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard BeginTime="0:0:5.0">
                            <DoubleAnimation Storyboard.TargetName="ctrl" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        
        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>