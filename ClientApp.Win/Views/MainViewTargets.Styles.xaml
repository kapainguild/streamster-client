<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:support="clr-namespace:Streamster.ClientApp.Win.Support">
    
    

    <Style TargetType="HeaderedContentControl" x:Key="ChannelTextBoxHintStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HeaderedContentControl">
                    <StackPanel Margin="0,0,0,0"  Orientation="Horizontal">
                        <ContentPresenter ContentSource="Content"/>
                        <ContentPresenter Margin="2,0,0,0" ContentSource="Header"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ChannelTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="wpf:HintAssist.IsFloating" Value="True"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="wpf:TextFieldAssist.TextBoxViewMargin" Value="1 0 1 0" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CaretBrush" Value="#AAAAFF" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="wpf:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
        <Setter Property="wpf:HintAssist.Foreground" Value="{DynamicResource PrimaryHueLightBrush}" />
        <!-- cludge the default context menu -->
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Cut">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentCut"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Copy">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentCopy" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="Paste">
                        <MenuItem.Icon>
                            <wpf:PackIcon Kind="ContentPaste"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" From="0" To="1" Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" BeginTime="0:0:0.45" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ScaleTransform" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                Background="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"
                                CornerRadius="{Binding Path=(wpf:TextFieldAssist.TextFieldCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Visibility="{Binding Path=(wpf:TextFieldAssist.RippleOnFocusEnabled), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0" />
                            </Border.RenderTransform>
                        </Border>
                        <Border x:Name="textFieldBoxBorder" Background="{TemplateBinding Background}"
                                CornerRadius="{Binding Path=(wpf:TextFieldAssist.TextFieldCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="border"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="True"
                                        Padding="0 4 0 4">
                                    <Grid x:Name="textFieldGrid"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          MinWidth="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                      />
                                        <wpf:SmartHint x:Name="Hint"
                                                       Grid.Column="0"
                                                       HintProxy="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:HintProxyFabricConverter.Instance}}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       Padding="{TemplateBinding Padding}"
                                                       HintOpacity="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                       UseFloating="{Binding Path=(wpf:HintAssist.IsFloating), RelativeSource={RelativeSource TemplatedParent}}"
                                                       FloatingScale="{Binding Path=(wpf:HintAssist.FloatingScale), RelativeSource={RelativeSource TemplatedParent}}"
                                                       FloatingOffset="{Binding Path=(wpf:HintAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}}">
                                            <wpf:SmartHint.Hint>
                                                <Border x:Name="HintBackgroundBorder" Background="Transparent" CornerRadius="2">
                                                    <ContentPresenter 
                                                        x:Name="HintWrapper" 
                                                        Content="{Binding Path=(wpf:HintAssist.Hint), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Border>
                                            </wpf:SmartHint.Hint>
                                        </wpf:SmartHint>
                                        <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Top" >
                                            <Button x:Name="PART_PasteButton" Height="Auto" Padding="2,0,0,0" Focusable="False"
                                                Style="{DynamicResource MaterialDesignToolButton}" Visibility="Collapsed"
                                                    Foreground="{DynamicResource MaterialDesignTextBoxBorder}"
                                                    ToolTip="Paste">
                                                <wpf:PackIcon Margin="0" Kind="ContentPaste" />
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <Border x:Name="textFieldBoxBottomLine"
                                        Background="{TemplateBinding BorderBrush}"
                                        Height="0"
                                        CornerRadius="{Binding Path=(wpf:TextFieldAssist.UnderlineCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        SnapsToDevicePixels="True" />
                                <wpf:Underline x:Name="Underline" Visibility="{Binding Path=(wpf:TextFieldAssist.DecorationVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                               CornerRadius="{Binding Path=(wpf:TextFieldAssist.UnderlineCornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                               Background="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Canvas VerticalAlignment="Bottom">
                                    <TextBlock Canvas.Top="2" FontSize="10" MaxWidth="{Binding ActualWidth, ElementName=border}"
                                           Opacity="{Binding Path=(wpf:HintAssist.HintOpacity), RelativeSource={RelativeSource TemplatedParent}}"
                                           Text="{Binding Path=(wpf:HintAssist.HelperText), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Canvas>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="support:Behaviors.TextBoxHasPasteButton" Value="True">
                            <Setter TargetName="PART_PasteButton" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="support:Behaviors.TextBoxIsFlatty" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="false"/>
                                <Condition Property="IsMouseOver" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_PasteButton" Property="Foreground" Value="#505050"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Foreground" Value="#909090"/>
                        </MultiTrigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Underline" Property="IsActive" Value="True"/>
                            <Setter TargetName="Hint" Property="Foreground" Value="{Binding Path=(wpf:HintAssist.Foreground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Hint" Property="HintOpacity" Value="1" />
                            <Setter TargetName="PART_PasteButton" Property="Foreground" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="PART_PasteButton" Property="Foreground" Value="{Binding Path=(wpf:TextFieldAssist.UnderlineBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                        <Trigger SourceName="PART_PasteButton" Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_PasteButton" Property="Foreground" Value="White"/>
                        </Trigger>

                        <Trigger Property="wpf:HintAssist.IsFloating" Value="True">
                            <Setter TargetName="border" Property="Margin" Value="0 18 0 0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.42" />
                            <Setter TargetName="textFieldBoxBottomLine" Property="Height" Value="0" />
                            <Setter Property="Opacity" TargetName="border" Value="0.42"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="TextBox" x:Key="ChannelTextBoxStyle" BasedOn="{StaticResource ChannelTextBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontWeight" Value="Normal"/>
    </Style>

</ResourceDictionary>