// FFDynamicStreamer.idl : IDL source for FFDynamicStreamer
//

// This file will be processed by the MIDL tool to
// produce the type library (FFDynamicStreamer.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";


typedef enum StatisticType
{
	statisticTypeVideoFrames = 0,
	statisticTypeVideoBytes,
	statisticTypeAudioFrames,
	statisticTypeAudioBytes,
	statisticTypeProcessingTime,
	statisticTypeDropped,
	statisticTypeErrors,
	statisticTypeCount
} statisticType;

[uuid(B2991AF4-6762-431C-A615-EB3B7B3CE882)]
interface IDynamicStreamerCallback : IUnknown
{
	[id(1)] HRESULT NotifyError([in] int errorCode, [in] BSTR errorMessage, [in] BSTR pattern);
};

[uuid(B2991AF4-6762-431C-A615-EB3B7B3CE883)]
interface IDynamicStreamerDecoderCallback : IUnknown
{
	[id(1)] HRESULT NotifyFrame([in] int width, [in] int height, [in] int length, [in]__int64 data);
};

[object, uuid(9ADD4A25-2BD3-42E5-A06F-C8548ECC9A95), dual, nonextensible, pointer_default(unique)]
interface IDynamicStreamer : IDispatch
{
	[id(1)] HRESULT SetEncoder([in] BSTR  videoCodec, [in] BSTR  videoOptions, [in] BSTR fallbackvideoCodec, [in] BSTR fallbackVideoOptions, [in] int videoMaxBitrate, [in] BSTR  audioCodec, [in] BSTR audioOptions, [in] int audioMaxBitrate);
	[id(2)] HRESULT SetInput([in] BSTR  type, [in] BSTR  input, [in] BSTR  options, [in] int fps, [in] int width, [in] int height);
	[id(3)] HRESULT AddOutput([in] BSTR  type, [in] BSTR  input, [in] BSTR  options, [in] IDynamicStreamerDecoderCallback* pCallback, [out, retval] int* pId);
	[id(4)] HRESULT RemoveOutput([in] int id);
	[id(5)] HRESULT GetStatistics([out, retval] SAFEARRAY(VARIANT)* pStats);
	[id(6)] HRESULT SetCallback([in] IDynamicStreamerCallback* pCallback);
	[id(7)] HRESULT SetFilter([in] BSTR videoFilter);
	[id(8)] HRESULT SetDirectFrameCallback([in] IDynamicStreamerDecoderCallback* pCallback);
	[id(9)] HRESULT GetSupportedCodecs([out, retval] int* pFlags);

};

[
	object,
	uuid(9738B6EE-8144-4105-955E-9F9FEA664EAF),
	dual,
	nonextensible,
	pointer_default(unique)
]
interface IDynamicStreamerStatistics : IDispatch{

	[propget, id(1)] HRESULT Interval([out, retval] LONGLONG* pVal);
	[propget, id(2)] HRESULT Overall([out, retval] BOOL* pVal);
	[propget, id(3)] HRESULT Id([out, retval] int* pVal);
	[id(4)] HRESULT GetValues([out, retval] SAFEARRAY(VARIANT)* pValues);
	[id(5)] HRESULT GetError([out] BSTR* errorMessage, [out, retval] int* error);
};


[uuid(64B17594-4794-4926-B99D-057CEB8CC545), version(1.0)]
library FFDynamicStreamerLib
{
	importlib("stdole2.tlb");

	enum StatisticType;

	[uuid(E070BC4F-392A-43AA-9E89-039B68859242)]
	coclass DynamicStreamer
	{
		[default] interface IDynamicStreamer;
	};

	[uuid(F11DB7A9-C9D8-4992-8AFD-4C03A00AC5E4)]
	coclass DynamicStreamerStatistics
	{
		[default] interface IDynamicStreamerStatistics;
	};
};

